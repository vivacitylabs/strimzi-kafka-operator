jobs:
  - job: 'build_strimzi'
    displayName: 'Build Strimzi'
    # Strategy for the job
    strategy:
      matrix:
        'build_strimzi_java-17':
          jdk_version: '17'
          main_build: 'true'
    # Set timeout for jobs
    timeoutInMinutes: 60
    # Base system
    pool:
      vmImage: Ubuntu-22.04
    # Pipeline steps
    steps:
      # Get cached Maven repository
      - template: "../../steps/maven_cache.yaml"
      - task: Cache@2
        inputs:
          key: '"kafka-binaries" | kafka-versions.yaml'
          path: docker-images/artifacts/binaries/kafka/archives
        displayName: Kafka binaries cache

      # Install Prerequisites
      - template: "../../steps/prerequisites/install_yq.yaml"
      - template: "../../steps/prerequisites/install_shellcheck.yaml"
      - template: "../../steps/prerequisites/install_helm.yaml"
      - template: '../../steps/prerequisites/install_java.yaml'
        parameters:
          JDK_VERSION: $(jdk_version)

      # Build the Java code without tests
      - bash: "make java_install"
        displayName: "Build Java code"
        env:
          MVN_ARGS: "-DskipTests -e -V -B"
          CURL_ARGS: "-s"

      # Run different checks on the code
      - bash: "make spotbugs"
        displayName: "Run Spotbugs"
        env:
          MVN_ARGS: "-e -V -B"
      - bash: "make dashboard_install"
        displayName: "Setup dashboards for Helm Chart"
      - bash: "make helm_install"
        displayName: "Generate YAMLs from Helm Chart"
      - bash: "make crd_install"
        displayName: "Distribute CRDs"
      - bash: "make helm_unittest"
        displayName: "Run Helm Chart unit tests"
      - bash: "make docu_versions"
        displayName: "Generate docs version files"
      - bash: "make docu_check"
        displayName: "Check docs"
      - bash: "make shellcheck"
        displayName: "Run Shellcheck"
      - bash: "make release_files_check"
        displayName: "Check released files"
      - task: GitHubComment@0
        displayName: "Comment on the PR for forbidden release file changes"
        condition: failed()
        inputs:
          gitHubConnection: strimzi
          comment: >
              This PR contains forbidden changes to the `examples/`, `install/`, or `helm-chart/` directories.
              These directories can be updated only as part of a Strimzi release.
              Any other changes to examples, installation files, or to the Helm chart should be done in the `packaging/` directory.
      - bash: ".azure/scripts/uncommitted-changes.sh"
        displayName: "Check for uncommitted files"
      - task: GitHubComment@0
        displayName: "Comment on the PR for uncommitted files"
        condition: failed()
        inputs:
          gitHubConnection: strimzi
          comment: |
            This PR contains uncommitted changes to the generated files in the `packaging/`, `documentation/`, `cluster-operator/src/main/resources/cluster-roles`, or `api/src/test/resources/io/strimzi/api/kafka/model` directories.
            To fix this, please run the following command:
            ```
            mvn clean verify -DskipTests -DskipITs \
                && make crd_install \
                && make dashboard_install \
                && make helm_install \
                && git add packaging/install/ packaging/helm-charts/ documentation/modules/appendix_crds.adoc cluster-operator/src/main/resources/cluster-roles \
                && git commit -s -m 'Update derived resources'
            ```

      # We have to TAR the artifacts directory and store it
      - bash: tar -cvpf binaries.tar ./docker-images/artifacts/binaries
        displayName: "Tar the binaries"
      - publish: $(System.DefaultWorkingDirectory)/binaries.tar
        artifact: Binaries
